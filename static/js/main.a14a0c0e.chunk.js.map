{"version":3,"sources":["components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","console","log","buttons","Object","keys","className","s","container","map","btn","name","type","onClick","charAt","toUpperCase","slice","Section","title","children","Notification","message","App","state","leaveFeedback","e","target","setState","prevState","this","Math","round","TotalFeedback","countTotalFeedback","countPositivePercentage","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"uTAgCeA,EA7BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,+BACE,6BACE,sCAASJ,OAEX,6BACE,yCAAYC,OAEd,6BACE,qCAAQC,OAEV,6BACE,uCAAUC,OAEZ,6BACE,oDAAuBC,EAAvB,a,gBCUOC,EAzBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClCC,QAAQC,IAAIH,GAEZ,IAAMI,EAAUC,OAAOC,KAAKN,GAC5B,OACE,qBAAKO,UAAWC,IAAEC,UAAlB,SACGL,EAAQM,KAAI,SAAAC,GAAG,OACd,wBACEJ,UAAWC,IAAEG,IAEbC,KAAMD,EACNE,KAAK,SACLC,QAASb,EALX,SAOGU,EAAII,OAAO,GAAGC,cAAgBL,EAAIM,MAAM,IALpCN,SCEAO,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,MCGQC,EAPM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KC2DEC,E,4MArDbC,MAAQ,CACN9B,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGP6B,cAAgB,SAAAC,GACdxB,QAAQC,IAAIuB,EAAEC,OAAOf,MAErB,EAAKgB,UAAS,SAAAC,GAAS,sBACpBH,EAAEC,OAAOf,KAAOiB,EAAUH,EAAEC,OAAOf,MAAQ,O,wDAIhD,WAEE,OADckB,KAAKN,MAAM9B,KAAOoC,KAAKN,MAAM7B,QAAUmC,KAAKN,MAAM5B,M,6CAGlE,WACE,IAAMC,EAAQiC,KAAKN,MAAM9B,KAAOoC,KAAKN,MAAM7B,QAAUmC,KAAKN,MAAM5B,IAChE,OAAOmC,KAAKC,MAAyB,IAAlBF,KAAKN,MAAM9B,KAAcG,K,oBAG9C,WAAU,IAAD,EACwBiC,KAAKN,MAA5B9B,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBqC,EAAgBH,KAAKI,qBACrBC,EAA0BL,KAAKM,kCACrC,OACE,qCACE,cAAC,EAAD,CAASjB,MAAM,6BAAf,SACE,cAAC,EAAD,CACEnB,QAAS8B,KAAKN,MACdvB,gBAAiB6B,KAAKL,kBAI1B,cAAC,EAAD,CAASN,MAAM,aAAf,SACoB,GAAjBc,EACC,cAAC,EAAD,CAAcX,QAAQ,sBAEtB,cAAC,EAAD,CACE5B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOoC,EACPnC,mBAAoBqC,a,GA9ChBE,a,MCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,IAAM,gC","file":"static/js/main.a14a0c0e.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <ul>\r\n      <li>\r\n        <p>Good:{good}</p>\r\n      </li>\r\n      <li>\r\n        <p>Neutral:{neutral}</p>\r\n      </li>\r\n      <li>\r\n        <p>Bad:{bad}</p>\r\n      </li>\r\n      <li>\r\n        <p>Total:{total}</p>\r\n      </li>\r\n      <li>\r\n        <p>Positive Feedback: {positivePercentage}%</p>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  console.log(options);\r\n\r\n  const buttons = Object.keys(options);\r\n  return (\r\n    <div className={s.container}>\r\n      {buttons.map(btn => (\r\n        <button\r\n          className={s.btn}\r\n          key={btn}\r\n          name={btn}\r\n          type=\"button\"\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          {btn.charAt(0).toUpperCase() + btn.slice(1)}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\nexport default FeedbackOptions;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n  return <p>{message}</p>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\nexport default Notification;\r\n","import './App.css';\n\nimport React, { Component } from 'react';\nimport Statistics from './components/Statistics/';\nimport FeedbackOptions from './components/FeedbackOptions/';\nimport Section from './components/Section/';\nimport Notification from './components/Notification/';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  leaveFeedback = e => {\n    console.log(e.target.name);\n    // console.log(e.target.textContent);\n    this.setState(prevState => ({\n      [e.target.name]: prevState[e.target.name] + 1,\n    }));\n  };\n\n  countTotalFeedback() {\n    const total = this.state.good + this.state.neutral + this.state.bad;\n    return total;\n  }\n  countPositiveFeedbackPercentage() {\n    const total = this.state.good + this.state.neutral + this.state.bad;\n    return Math.round((this.state.good * 100) / total);\n  }\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const TotalFeedback = this.countTotalFeedback();\n    const countPositivePercentage = this.countPositiveFeedbackPercentage();\n    return (\n      <>\n        <Section title=\"Please leave your feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.leaveFeedback}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {TotalFeedback == 0 ? (\n            <Notification message=\"No feedback given\" />\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={TotalFeedback}\n              positivePercentage={countPositivePercentage}\n            />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__1OJLO\"};"],"sourceRoot":""}